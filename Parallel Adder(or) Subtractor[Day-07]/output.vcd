$date
	Sat Feb 17 21:54:52 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module parallel_add_sub_tb $end
$var wire 4 ! sum [3:0] $end
$var wire 1 " co $end
$var reg 4 # a [3:0] $end
$var reg 4 $ b [3:0] $end
$var reg 1 % m $end
$scope module pas $end
$var wire 4 & a [3:0] $end
$var wire 4 ' b [3:0] $end
$var wire 1 % m $end
$var wire 4 ( w [3:0] $end
$var wire 4 ) sum [3:0] $end
$var wire 1 " co $end
$scope module fa1 $end
$var wire 1 * a $end
$var wire 1 + b $end
$var wire 1 % cin $end
$var wire 1 , co $end
$var wire 1 - sum $end
$upscope $end
$scope module fa2 $end
$var wire 1 . a $end
$var wire 1 / b $end
$var wire 1 0 cin $end
$var wire 1 1 co $end
$var wire 1 2 sum $end
$upscope $end
$scope module fa3 $end
$var wire 1 3 a $end
$var wire 1 4 b $end
$var wire 1 5 cin $end
$var wire 1 6 co $end
$var wire 1 7 sum $end
$upscope $end
$scope module fa4 $end
$var wire 1 8 a $end
$var wire 1 9 b $end
$var wire 1 : cin $end
$var wire 1 " co $end
$var wire 1 ; sum $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
1;
0:
19
08
07
06
05
04
03
12
01
00
1/
0.
1-
0,
0+
1*
b1011 )
bz000 (
b1010 '
b1 &
0%
b1010 $
b1 #
0"
b1011 !
$end
#10
17
1"
15
0;
11
1:
02
16
10
bz111 (
1,
1+
0/
14
09
b101 !
b101 )
1-
1.
13
18
1%
b1111 #
b1111 &
#20
0"
1;
0:
06
05
01
12
00
bz000 (
0,
17
0+
b1110 !
b1110 )
0-
0*
03
0%
b100 $
b100 '
b1010 #
b1010 &
#30
1:
16
07
15
bz110 (
11
1"
02
b1000 !
b1000 )
1;
1/
19
b1110 $
b1110 '
#60
